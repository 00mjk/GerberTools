<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAQAICAAAAEAIAD1AwAARgAAADAwAAABACAAtAUAADsEAABAQAAAAQAgAJsHAADvCQAAgIAAAAEA
        IACYDgAAihEAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAFzUkdCAK7OHOkAAAAE
        Z0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADiklEQVRYR71XO0wUQRims7S0tLS0tLQ0
        kZeye4I2EOQhu4tXWNCYSGJilILEQm3EwsJOC03kIYIHHOG5t3uFRnxLxKgJSiTiKxnn+3dmmd2d4x6A
        X/LlZv/99/u/eezcbNX/gp3K9TiG96M75TOV4vbuIW36B3jh6XhhEHGRtj10dy/tcQz/krgMUajXks4J
        96BIrRxWo1vvmN4KBK1Ti/sRO9uU3+eY/li8YISmd4cEKgWG1ja9h6ooxVJuMze0qsbjxKjApJAqD3K4
        dUPLez0Tj+mom66SwHvWKIc7So85iZie9DzvhJAsDbSSC8wpjydiW9Eyc51Ctjh6Ugt7MVw6IbDUXkty
        s66QLg67wTuiH25OM5+MlUBoCvnCCB8wvYTAlvFiFFMlyujBe8za6jLsdO2TkJ3Hppltuqy9bpKu2+sn
        6VrmtddNRPJx3zLmsdg2tWrGWWvtuNDK6Y0giGTr5CgbuOZyLrIb/XOs5ehQwOphNnDdpfton2sbY1cv
        z1L7Ys8U3VPvyxwZl7mg1TCvN9BaM8oe3H3GVKx92wgLAL77gUSyE2/pHtrL77/SPeDPn7+RHBXIP5/O
        0KglRiFuoKV6iApDEEIwgDaAdtwAiN6PDr6gHPRYGkBOX+80tQfvP+fXIzRFonSAuAE8PJN9R+3M41fh
        CLxc+kKFUShuAG2YBqCTzQQGVC08BwMFRuBRaGB9/Rf9flxZC+cSuH3To5FAwaIGJt5QW9XCKGGthQbk
        3p6cgmGaSxTDvEkDKIARAVQDnz99pxzZ077ebGQKMHIwAgN4O0IDfC6e4kJnAPMILMwuhwZgBiIoqBqQ
        +Lnxm/Kb+RqCUXRA1QqmYJheZTIgi4NwBnH1lUEbC0i2g/gITYuMy7cElM+B0JI5IJ5HLtpdDXNJA/hX
        w0aCOcKmceb4DDe1ucHIeLAxBRtQR/0U/Up28A3LMhYiGxF0VC20UU9jYAdo+lMkzKHG1Wu6KaEmbZu8
        13Yqf0VIlwbbzPdrxSog/T0b/i0hXTp057uyKf7t+Ct9T8iWjy7TPYxDQ0K8DOLkJOQqB45NfBXrDyM6
        Kscy2/BfC5ntgY5jpndhqw8LopHbcDjlNYwLiZ0Bzu/4iIgUVYhFzPeFtBoTj+4s0k3eofjJmPd2lQzi
        /0RZOxV/dJQCfIphnlEIPRdhWsDSgPxE2zWgx1io8Q8MOVUwI0JFUFX1D+hZ2KRrsLWTAAAAAElFTkSu
        QmCCiVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACx
        jwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAVJSURBVGhDzZlNbBtFFMdz48iRI0eOHDlyRGqapI2d
        tnBpaFza2g45cMgFCSQkhDhE4kC5ABK9wKUcWomSkKYNpKFRGse2qvAlqkJFq4IaqCiUUqRlfrPvObvj
        WXttr938pb/W+2bmzXtv3nx4dmg3Y3biyuOlfPWz6YlakESpuvtQGq8+V85Xb/qMjlKq7x4Q9elc7UOf
        sS7Luerf0mwwKB6sjJVztU/ltQlpo64sTWzOStP+YiZfe0pzuZSrXRNxA51EXWkdnf7+MVHRH9CBifib
        DHWk420ptjiRrzzbSdSVps1BUdEf2HRJMIxydc5X3o7lfK1iO+kHoumSxJkDm/uMc1u+sjScOVR9RrrL
        Dr508TLvkXXAVotA12iVLnFWPbL0JDiMsHTbO9Kki2WPUVeW8vU56bo3dJIuZmT8ZR2SEX75UP0JMaF7
        pE2XMs+MjIelfGVGTOgOnaRLVlFXGn1bPW1apYnK4bbpYph11JWMupjSHci9dg5kHXWl2bSWxIzO0KTI
        ed9htUVZ7yzL0itmtQeVS7mN4OjYV8HUyMUYC6MXgmP7Vs2E2rQRPzq60ig7vv9r6dTIpW1h9CKTz6vr
        pbEVaRMaWBxfb6oDaXtifC29E1QsjC4HrxSWgg9OVmJ85621YHJ43vLIyIWg+PxiTI5zGM1v5OiYHF5o
        vEdJW6tn73nrCPXefn11p867G/YZ6pi3NqVygkpH9i4GZ09/E/hw796D4L25dauUp+L0x1etEcgXz/1g
        ZbXKL/adMh+uX7sTvDG7YuvAhw//k5I4Ln153ZYf33+5vROuA//c/ze48fPvloq7f9y3ComQAsdenVm2
        cjoEV+u37Luri/aKX2//2RgNBTLqoVNBX1MjS507gKLJPWFkT71ftTKgKQY0ct9u3W7pgNVl3uEnp+pW
        BnREFejVeurs8vkf7TtzRkz1w+uAKNPUwGDNf3Dr5t2GE6SL1ktygEjy1AhTzrtCHSC9GDWATlK0Ywd8
        IHfpQB3YvvNXcGXthv2NUefOfGd/JznAysJTo+s64ILgMMGnzMKRLoWGv0h0gGjryqAOYAgyjSiGgiQH
        dKVK6wDpRrku1WJqHJw19I+1L4U0wkRDJ2vUAd51juiwt5oDRFThmwMszZqWYfrM2/1JzI2Dv2j2wGSM
        T3KAnNcI4wwy1wHIRFa4DkRXNDUOneg+bPJbgV7aRdOSOt69wPfHOs0kZhSaHViwcnXUdcAF9Wz093xu
        6ynUAXSpo5cv/WRl7OxiegjXeMgWTk6zHGr+IVNjkKOcqLC8IaOMnRgnGH7q6A5NXd6VBAIjaU/9QkQ3
        +pAzYZGpLrWDY4WYHsLnAJV0qXvRTOhw6Kr2yTtyRkmdskaYicn5iLaU2bbmGZ6DQl1R0hZ95DVnq3Bi
        h/sNxhdz63bn3Wm7YM9P1BXTQ/gcGCT1rO/Kk2xDHoOv0qBo5t9vYkb38CkeFDO5oPIpHgjNf+fiCxtP
        ihndw6u835S/n5lcUnHd3dRBn1meqNsnN9NiRvfgCMGdi1kCt92O+sLIn3/TZ3ZX5OEHtfpcrLN+MOIA
        1zXSfXZgYnEDHOs0Kzp3pGYEXpNus0f45aRWiXbYO3eiDzO7rG0FeyvXxSegVDTHd+mmv7C30Wa401wv
        JlEvqKLkrlW6GAzCK8baSdeQtszVP/KNognIqqgeLMoHKk9zZ+ka5COjhuMc2twy3yfXgUI+TLf8WBdd
        adzreVMW++T6yCAbYXOKIIvc63N0cOeRFD16sBG6n52K+c1jUtyA+xc2kwNdltCNMOljtKxojdHq7UA3
        NPQ/7AYLDqyE50YAAAAASUVORK5CYIKJUE5HDQoaCgAAAA1JSERSAAAAQAAAAEAIBgAAAKppcd4AAAAB
        c1JHQgCuzhzpAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAOwwAADsMBx2+oZAAABzBJREFUeF7dWz1s
        HEUUdkdJSUlJSUlJiYSxnfjWONDgYAfHd+e4oHABEpGQIpQiEk1ogCISP01SBInExnZ8JmcnxLkfKzIQ
        IDFEJAoogYBDgCAt882+tze393b3dm93vc4nffLd/L6/eTNzu+57FDGzr/FM2WpsTo807TBSl0cD09NX
        HysXmkckRf1IXXc/ZqzmU+VCY1VSMojUPX+YHVl/nD6GojRSn1XK/yUpGEYaIj+A4iqMj08Xmh9SkS/i
        ep1Ztpo1GiofKFr1SZW87mrhCs1TVCyiF68zkSxpuJ2FztoeTyrvLFF1G3r1OjPMwJnADXdBwFKheY2a
        uSiN1F7p1esgxii+fPlJGnZnYIa7RFV3k5r2Hdq38UTJanwutYvDkrVxjIbOHlK4+xHttdcDDBWVMGyU
        HSYxBIW7H9UyWJTKe2HJqs2QSNkhLNw72bDLYnlvxLaH0yKJlT6ihLtLSyhLiMXR2hCJli7ihLum1ZDL
        EyCSKImXLqKHu6K1IZcnyPKLtadJxHQQK9zBFL3ORDSSmMkjfrin73UQhx6cI0jcZBEv3JXHM/A6E3cG
        Ejc5xA93oSxF4tCT+LaHrUSaLJzZeZ2JUySJnRz0z06wrDChyIy9zkz1rt99FGTvdeaUVXuWxO0N0uCg
        srBYrrlDXnep5ifxe0PJqtsH967Z4wPLHZxQnByq2sXhS8bEDXtyz5o9MVjRbQ4MrtjFwrpbry4iqn7V
        HQNjo+zg3gtuH5MHhr7U7aeGv2rNIYxj0pFr1Z2XVIkOdIYAY/1z9nvHLtkfHK+18d13Ltpjz8/p+vGB
        c/aUmnBKKYLvRw+v6javTyzp78WCY6SJwWX93e2vPr/6woL++/bs+bbxwTdnKrrOabcojuPl0cNrbh+0
        g7FIpWjARJj05CdX7CB8f/VX+41Dy/b+/i+0FyE04+8H/+rvUBL5YKx/3q4s/kC1thYYgsJQDx/+R6Wd
        wBwwENoi4rzjSGjWftbj8tykVvdwDLBgf3byaxrSH3fv3LeLL7U8aWLr2h1d/tqeqv5bXdmimpYBvH0k
        wECILI4Ycxw/3PjpN2fuofPRl4NkAAyIiauVLfvKxi3tYcaZ09/6KoMxUOcVXDIAxtRzKMLzZmSwMb3j
        oF115bou+2bzdlufE+83lB6LyRgAE4z1n1VrX1EJcaH6I9U4IScpw395PZuCSwa49/sDXcaE101wpJnj
        OAZ2ZAJhBAaWCsoiLwPRAMrzPAloGmD94g1dZioDjzHYe90aADsDMj0+37p5j2ptnZC945gRBpoGWDjz
        nSqbT8YA7hJQRNiZ+PTEhp7cVAYG2t7+h77ZOqFCIEaYAZD18RnzMriPaQBnCThymW0B7DbYHmMvgdOG
        Afzwy+0/xSSIPAHDMGAM06BJGcAPHHWIJFKreyBk9nsiQALCk7cbnAe8BvAqYIZnmgZAVMAp4wNL0c4C
        +IGDH0JISRAhZe7ByLhIcDgD4OAkGQCJjDMzFGQEGcA5GZ7TSpjLCG29BoCMyA3IQwz0Qd9IW2BpuPGc
        edOTDIDJQTMHcALEdiMZAJQOLkEGAGFs7C4M7CZcV61cp9L2JIjlyOAEGBoB8DoeR7PiYQbA0jDXNkcB
        6iQD8NHVzOaAZIAgOAqRATwRgJMolDWTLEcBogn6kLrt8HrdpJ8BcInBX9Pa0jbIBoAHMBY8ah5SohiA
        zxn6fqLuIF4DYHyEu3fJsNF8o0BSnIk1iPWLbIpEhHUGS3OChEJQEnVsAAiARIcy3hqVgekMP6fLUIcl
        BMVRBkJBlJtEGRTFPGgDeXBDxdyQBW0gG2R0kl1dtZvXhmUZ+CCEpEoqt0NSnIlOTmg5QoLYUlBXKlzu
        qIMXQLMMHuPxnIPNvFE/r+8I3j5eYh5EnR5H3fWlcSAr6vmyZPaHcXyvxyxcELEdgfCktw6hxfVumTIO
        vsMjZltdp8pa7VvjcR+TGNvsi5+48YDD+a6iitrxOKY+rfFCfhfgDruBqTzXlybKI0tWczuVBxzSZLlk
        of4RiZwsxMlyRnUy/SO15/rShHlj2apXSNzkIU2YJ2Ln8XtlLhFIk+aJZbXFKSNskrjJA3urNHEuSA9Y
        pHcGEwNeGCwXmqc6Jt9peg5dJG56iP3IOyWWRzwvUGT1dpdab6OK3T/9TYPCkTvTV1thbf02doJvaEai
        YABEKImXHXD0jPX+Ty/0ebKc2OPuOMANLMmXlYPZ6X0wlbc9ooJ+Perqv7FiMeC9AnU1zv4dXz9AmDQS
        JQ49Ujmo5nuLps8H6P3AI0kdpNRx96xUzkz1ZcdegO1JZe2PJaG7JYzoJNyAc4iag6bMJ3o5SPH6bv3c
        1clUL0RJQq3VUZzdJSUk6lxinPLws5fcLmf/4haEKAcp7zv8OrcICTbVC1FaCDtI+XkVe77Unqp3H/C/
        ftJBKuh4K+aTrC5EacE8SOEKTsUipISY/IWor+9/sLBKkid8XF4AAAAASUVORK5CYIKJUE5HDQoaCgAA
        AA1JSERSAAAAgAAAAIAIBgAAAMM+YcsAAAABc1JHQgCuzhzpAAAABGdBTUEAALGPC/xhBQAAAAlwSFlz
        AAAOwwAADsMBx2+oZAAADi1JREFUeF7tnU2MHEcVx33LkSNHjhw5cswRKf4KnlkcuMTBSRzvrvGBgy+g
        ICFFCKRIHDAXyCEHwyU5BInAYq+zJjZ2Yq9nrMgEA04gwlFACUQEAjjSUL/qV7s1vdU9VT3dPV099Zf+
        Wnu6Pl69eu/V5/TsS4gLJ4fbD64PR/dOrYwndVCKTeg6Tp2688D6YPyMqxPnoRSf0GWcfmT0eeX1t10d
        OC+lioQuoimvtylVJXQNTXq9TakuoStow+ttSrUJXcDp4fiz64PRFVdHNUWpOsEXOjQPxi/Kf2vD2srN
        M6rz/+3qpCYp1SfMwtceufXpU4PxcyiNdbh8PDcW4fU2RYyEMqwNt0+rTv+gbsUtyuttiigJLmQz8fG2
        S3FEBEkWjEV7veHaYHxXREqwYYf7Iq5+5cZnJHkQ1la2H1201xuuHt0+LGIlGLjCvYvsyUsWL2BUa8PR
        z11lLYJEIBEtAZSFexdDvEd7vYdRtcn1L21/TsRbbviEexfpVCmiEF3z+h0OR+dExOWGnoVX9EzySjFO
        dNHrIfOPeSawvYCcqc+1z852rRQ3hTMr1z/FRpErTxdYJPdSQId7Ff5cigmmGjak2B2sHRl9QRlWbZc1
        6qaW7dSdB0Tc5cI84d5FezsYr68yj2ibq8ObJ0Tk5UEd4d5FtWLYpPyue70hKxytkGVBreHewfXBzTdj
        8HpDDFVU03/UHe73cDhSc4DRJ85nHWQTp5edRFPhfopDx2cdZ+83fQj37Sy9lOc7P+8u14a3nhU19Q8s
        aVo5Uo3Q62GvN31k9t34pckYvd6Qgy1RV3/QWriP1OsN9dK0T5s+bYZ7pTz3s4jYq7P+tsL9On970Pm9
        2fRpM9z3wesNo1/2tRbuFfvi9YbRb/oQ7rms6GpcreyZ18Ool31csmzv9swo8/yeMcpNH8K98sSn2wj3
        UE2QnJ/HTqXD+JZ9rYV7zX56vWFUmz7thvv+er1hNMu+tsN9373eMIpNn3bD/fKQSCoq7iZYlrR+N75n
        y7sydn7TR1+TbuvO3PCW+/Oecn0wPitq7jb4koSrAbVyibweRrfpowRu5uvQS+b1hmyVi2rjAGOVqyFz
        ccm83jDKTR/AVqWrQcHs+bp+FpUBHBWVxoV6JoTL6fWG0Z/1V54QLrnXG/IeA1Fld+AStIwqCjg/L+Zy
        e71h5876EWptuD156ou/mZx4+Io3nzpydbI6uO5s5BTF608eeW1vGarOteHNvXlyXBvccOS96syLTPm0
        RaSM1cHrwcbskmcWV4+8rvOZMkT9iwcdc2z/Lyvx0f0b+u/xg69oI7KVZF/WOH5wc09ew68eOL83r8Un
        D7/qzGdo533i0CVnGl8+fmirVBY4S54yGn09cfjXO7qRblgMEABhvv745uTDf3w8CcEH7/9r8s6f/z65
        vPXW5Bunt1TDNiZPPnxZNUoOb6SBKJRGn3/595JzF39975+67uMHL+4oOE8M5Mdntyf/+fh/kivDH+78
        TZeLF2dpR1qGn73w28n9+59IqnLQZtpw9fKftHzIQpl0clFUKJJnFt6996GWmXpWv3x+8pgqx8gu3dE+
        sgZdmPz0+VsiZjWgjJdf+t3k2EN49OaUwk4euaaVSme78Matd/VzwqSdDxLieXb92juSehp2PkI5/3/7
        7vvyNBwfffTfrB2qnMf2/0qXGSKPL3AejIiyMqdZkBFQMRaN19QB05mM7UZpWDmflUWY53+UeW8+/Jro
        Qbku8CxvAHj0vMBYv/utK9pL7UgwS55QoHfKY24gXdIuaFSdBgB2OzOboPkYAJ6XDQWv7CjbR+E8a8IA
        ACGb8hgifeUJBZGT4ZM5EuVLt7QHKq3bAOhoxjijOB8DALvRw4zpizUAsHXhj7pMZvA+8lTBm7ff02Uy
        VEq3tAcaVWYANJSxaoc/uKH/Xr70th7HikAaM7HzNQCQHwrqNIAXfvLGVFv4P+0oMxgmk98+86paHWSR
        aZY8TPDsOiDzKyaZRZNG6sBhFjIXoMIyA0BBNJjQvMtNtZxRXqGELupUFEFHUn6IAZjoYYaCOg2AjmRM
        N+3g36SHGF7RyoFJIWl95KHDmTzu6OrAltLvBZ3n+9+5VlgHz4yRSde0Ayr0MQDSQXMxM1PEhn7uwnj7
        Lzof6YoMAI9g7M/D5CVf3QZgj+cZRzo/+Yrawoyf50wGfQzAGK99ymlWQmXRyRiZdE07oEI/A1Br+9z7
        esiHd7hAQ8lHp5RFgFmexK5emcJ5Np8BZMT7mPW7wLIya8v1IANQ+npa1MzLq3U+xnsXbEeTLO2ACmca
        wEMbWrk2TafirS6gIJ6zvCkzgCID2h0Kso2Zpg3ARAEXkIVnPhEpM4BNNWl8bUpf1Eu+onkT+sfgkUW6
        ph1QYakBbL2lBXexbNxk0kMawmaZAVBv0QaRGQog5bnAs64ZAM+P7f+F/N1l0RAD0OVCloJUWGYANB6F
        5skauQwognIpv8wA6NiyXcgfPpt1apHyeNYlA8CY87qCZSsmswowsknXtAMqLDOAKqCxKMksa8oMwKyB
        i6IAn/M8FgOoAhPp2GuQbmkPNL5OA8CaTRhEWZRfZgB0Fs/KogDPmCW7QN6YDYCy2QlcyAoAUCkG8FIN
        BkDnY0iZsvzOAowBwKJDHKIAQ4EL5IvVAFgCs/5nOc0KQ7qkPXAjlTP7OiIAYZ9lFMrhKNVWrp8BbGhP
        KNotK5KPvDEaAMfC2dHzxmK2gO0fNS4zAJTJ+MtmSJFiAdacHWrIJohFHwMgYqCMomUh0cE1TyBvHQbA
        fIWJmAtmTkNHzTIAPkdf/C2a1wDTbiO7dEvz0N/szf2ocZkB0BgENSzbzjQ7ZvlrYj4GQOfRCfy7qANd
        myikr8MAWILRNhfMxRP2NGYZwO4yMGORQQPmNoz9LJWle5qF7fU2fQyAo13TkZyQuYBh2Eebhr4GwG4j
        ++Z0VJGR5UHeEANgx490O1Qzb6IW+YrmIGZPA/l8DIDySGeujpXNbXhuhkzppmbAtqTdKTZ9DMCkxYMI
        la49fGCiAPcMTR5/A6ATs63fMs+xQdoQA+B5nhht0RYtYAWCYVKHrwGYtqPbosgCiAIMfTiYdFW98Pl5
        0xADIAzy/7IrUTTYjgIhBgBnDQU2SOdrAGxe8cxm2TgNkFlv0hy6pOsINYBsblO8z4EjUX4jUcD3HX0h
        BgC5OYvXFIVpM2aaKBBqANlQcF6vKmYNBeT1NYAqyMZ0//sJtgHQB7SFcb5sn8McndcWBUJ/1DjUAEKj
        QLgB7HZm0XzDgDRNGYB9LG3kCjeAlqNAlTdzhhoADIkCVQwAMt/gWdm5A8/rNgD2IjA8OsUO5zDUAEAr
        UYA3dlX97j6eiuAumDtx+TzmyyRlHoqBMHaatK6O2T1r32sAs4YCPiPvrgFkE8iyCd0s4PXITTnZl0Sm
        v3nEko1nl7fcZxPsWO41gN0vkxStCMxeA84i2cKgBKv840ooEGtnuUMnGRLiUX5+WWdoPJToQcPsvCgy
        u+VL3uyeH0eedI5JgxdldwCzY2NXHcarMVCiislLfawUeGavOPA0OoGyTdoiIgsRztwVpCzIjN9tkBmP
        H7io9UIb7fIoy4Ry6ZYd0D50wXPS2flMXuquPAzkhQwhnoNwRgE28UB7Xz9PYwQucimU3TOTjgsP+TR8
        xrN8uTbNEOIi3mYbD7JiBK60RSQ95SCHPd4X8YRKg15cZelOVsYj3TKFzAguOvNBHXHU/Io6JIs/8kJW
        IQIivKGZ+frQzqfzSkPy5PNZaYqIodp1EFlc6SCy22nd9Phia458r9/8O1+HMUTpEieyMqb1DI2uJVk4
        jFCJzZL3JIrKuwWXsIn1stPv8HcJnFgvO/0yR5fAifWx8+/wdwmdWA/ZWOv8yxxdgifWQzVD7/47/F2C
        J85PtWSL42WOLuET52c0P9zoEj5xPq4Px/dEvd2HqwGJ83F1Zfubot7uw9WAxOqM7ocbXY1IrMjhaBLd
        Dzc6G5JYiesrt5IBLC3lRI8LNqLaOLCnIYnVKAZwcrj9oKg2DuxpSGI4rVfZR7P+N5hqSGJF7l4w4fcQ
        RLVxYLohicG0vB9G92NOtvCJ4VzPXS/jC7Si2jhgC58YyJz3aw7Gz4lq4wDfBmr9p137QJn15xndTqAB
        lxbtm6uJ5Sz6VXKlw01RaZxYHd48oc+yHY1LFBZ4P1S6uy2qjBfy+34t/s5/XCzyfojziBrjB/vaytrP
        uRq6tHRN/HIU9fUHXGtmbHM1NnEviaCiun6Bbc61wfiuq9FLQQ/vh9EdCIWAi47cdlVjXeVvFUfJkolf
        ntEdCFUBYa62XwOPgJz1uz53sbPfA2wC2Qsmxi+6FNEbBng/jO5AqA4Q9nq7kRRsAJEdCNUJrL9XG0me
        Ez+b7KGIOpYT+rWyvdlICvN+zdgOhJoCG0lqfnDWqaQ+czg6JypIALFuJOXP+n0Z/YFQU8hOHPe+dLqT
        HPov+/KkjdLkBBe6vpGkZLvv+tyX7JZKUxOKoE8cB+NnujhRVCH8e/PKJc1MmIWubSQp79ff6ydKuZ77
        srcHQk1B/yhFxVfW1kmziydL2crzlV4fCDUJpfSj2gsdSm2a7GSKGBpMWl3pfIhBSzEJodAhmLeXtzxR
        dJ3iVR2elupAqCm0uZFER0u1U8hkCJ8QLuWBUFNo+uo6HUwdUt0eEI1c+coYxRvCYkNTG0mzXuZYZUKo
        0i/3gVCTqPPqOuX4vNQhdELI0CVZE5pAXRtJIaE6aEKYDoTawTxX1/UFVxXepaiZCJkQpgOhlpH9umnY
        iWOVlzn4TgjzewoJLcH36jq7jpIlCL4TwnQgtED4bCTN8w5/3wmhJO8w9u37P3iaa/7h24SuAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>